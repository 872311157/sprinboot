<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.demo.mapper.WorkCalendarMapper">
<!--    <resultMap id="BootUserMap" type="com.example.springboot.demo.entity.BootUser">-->
<!--        <id column="id" property="id" />-->
<!--        <result column="username" jdbcType="VARCHAR" property="username" />-->
<!--        <result column="passwords" jdbcType="VARCHAR" property="passwords" />-->
<!--        <result column="sex" jdbcType="VARCHAR" property="sex" />-->
<!--        <result column="age" jdbcType="INTEGER" property="age" />-->
<!--        <result column="workno" jdbcType="VARCHAR" property="workNo" />-->
<!--        <result column="email" jdbcType="VARCHAR" property="email" />-->
<!--    </resultMap>-->
    <select id="queryList" resultType="com.example.springboot.demo.entity.WorkCalendar">
        select * from calendar where workyear=#{year} and workmonth=#{month} order by workdate asc
    </select>

<!--    foreach的主要用在构建in条件中，它可以在SQL语句中进行迭代一个集合。-->
<!--    foreach元素的属性主要有item，index，collection，open，separator，close。-->
<!--    item表示集合中每一个元素进行迭代时的别名，index指定一个名字，用于表示在迭代过程中，每次迭代到的位置，-->
<!--    open表示该语句以什么开始，separator表示在每次进行迭代之间以什么符号作为分隔符，close表示以什么结束，在使用foreach的时候最关键的也是最容易出错的就是collection属性，该属性是必须指定的，但是在不同情况下，该属性的值是不一样的，主要有一下3种情况：-->
<!--    1.如果传入的是单参数且参数类型是一个List的时候，collection属性值为list-->
<!--    2.如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array-->
    <insert id="insertBatch">
        insert into calendar(workyear, workmonth, workday, workweek, workdate, holiday, workstatus) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.workyear,jdbcType=INTEGER}, #{item.workmonth,jdbcType=INTEGER},
            #{item.workday,jdbcType=INTEGER}, #{item.workweek,jdbcType=INTEGER},
            #{item.workdate,jdbcType=DATE}, #{item.holiday,jdbcType=VARCHAR},
            #{item.workstatus,jdbcType=INTEGER})
        </foreach >
    </insert>
</mapper>
